<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
          "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
          
<!-- Generated by MyEclipse Hibernate Tools. 自动生成-->
<!-- jdbc:mysql://localhost:3306/businessfiles -->

<!-- 连接远程数据库配置start   请 谨慎操作t_命名开头的表为本系统使用的表,除tb_manager外！！！！！！-->
<!-- connection.url :jdbc:mysql://pharaoh1995.online/dpdatabase -->
<!-- connection.username: root -->
<!-- connection.password:19950829 -->
<!-- end -->

<!-- jdbc:mysql://localhost:3306/dpdatabase -->
<!-- ?useUnicode=true&characterEncoding=utf-8&useOldAliasMetadataBehavior=true&zeroDateTimeBehavior=convertToNull -->
<hibernate-configuration>

	<session-factory>
		<property name="dialect">
			org.hibernate.dialect.MySQLDialect
		</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/dpdatabase</property>
		<property name="connection.characterEncoding">utf-8</property>
		<property name="connection.useUnicode">true</property>
		<property name="connection.useOldAliasMetadataBehavior">
			true
		</property>
		<property name="connection.zeroDateTimeBehavior">
			convertToNull
		</property>
		<!-- 连接数据库的用户名和密码  不同请在此处更改-->
		<property name="connection.username">root</property>
		<property name="connection.password">root</property><!-- 19950829 --><!-- 123456 -->
		<property name="connection.driver_class">
			org.gjt.mm.mysql.Driver
		</property>
		<property name="myeclipse.connection.profile">mysql</property>

		<property name="hibernate.connection.pool_size">10</property>
		<!-- sql方言 -->
		<!-- <property name="dialect">org.hibernate.dialect.MySQLDialect</property> -->
		<property name="hibernate.dialect">
			org.hibernate.dialect.MySQL5InnoDBDialect
		</property>
		<!-- 是否打印sql语句 显示hibernate对数据库操作语句-->
		<property name="show_sql">true</property>
		<!-- 格式化Hibernate的SQL输出语句 -->
		
		 <!--  <property name="hibernate.jdbc.batch_size">50</property>-->
		 <property name="hibernate.jdbc.fetch_size">50</property>
		 <!-- 关闭二级缓存 -->
		<property name="hibernate.cache.use_second_level_cache">false</property>
		
		<property name="format_sql">true</property>
		<!-- 自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none"
			常用属性有create、update
			create：
			每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
			create-drop ：
			每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
			update：
			最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
			validate ：
			每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。 -->

		<property name="hbm2ddl.auto">update</property>
		<property name="javax.persistence.validation.mode">
			none
		</property>

		<!-- 映射的class类,每一个类必须配置 -->
		<mapping class="com.hy.model.Teacher" />
		<mapping class="com.hy.model.LearningExperience" />
		<mapping class="com.hy.model.WorkingExperience" />
		<mapping class="com.hy.model.TeachingWorkload" />
		<mapping class="com.hy.model.ScientificResearch" />
		<mapping class="com.hy.model.ScientificAchievement" />
		<mapping class="com.hy.model.TeachingMatch" />

		<mapping class="com.hy.model.PaperResearch" />
		<mapping class="com.hy.model.Certificate" />
		<mapping class="com.hy.model.EducationalResearch" />
		<mapping class="com.hy.model.MonographTextbook" />
		<mapping class="com.hy.model.GuideStudent" />
		<mapping class="com.hy.model.TeachingAchievement" />
		<mapping class="com.hy.model.TeachingOtherPrize" />
		<mapping class="com.hy.model.LearningGroup" />
		<mapping class="com.hy.model.LearningMeeting" />
		<mapping class="com.hy.model.TrainingStudy" />
		<mapping class="com.hy.model.OtherWorks" />
		<mapping class="com.hy.model.PracticeTeaching" />
		<mapping class="com.hy.model.PaperTeaching" />
		<mapping class="com.hy.model.DataSet" />
		<mapping class="com.hy.model.TeachingMaterial" />
		<mapping class="com.hy.model.Patent" />

	</session-factory>

</hibernate-configuration>